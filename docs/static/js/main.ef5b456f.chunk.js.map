{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","divRoot","document","getElementById","ReactDOM","render"],"mappings":"mMAuCeA,EApCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAmBvC,OACI,8BACI,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAOd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBU,SAACP,GACvB,IAAMM,EAAQN,EAAEQ,OAAOF,MACvBR,EAAcQ,W,uBCTTG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MAEXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAgBZM,GAhBY,4CAAH,sDCgBLO,EAdK,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAG1B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBACIC,IAAKf,EACLgB,IAAKN,IAET,mBAAGI,UAAU,oCAAb,SAAkDJ,QCyB/CO,EAhCC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAXAC,qBAAU,WAENxB,EAASC,GAAWwB,MAAK,SAAAC,GACjBH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAIrB,CAAEpB,IAEEqB,EDdmBK,CAAc1B,GAAhCO,EAHsB,EAGtBA,KAAMa,EAHgB,EAGhBA,QAEd,OACI,gCACI,oBAAIJ,UAAU,yCAAd,SAAwDhB,IAEvDoB,GAAW,mBAAGJ,UAAU,mCAAb,6BAEZ,qBAAKA,UAAU,YAAf,SAGQT,EAAKE,KAAI,YAAyB,IAAtBG,EAAqB,EAArBA,MAAOV,EAAc,EAAdA,IAAKS,EAAS,EAATA,GAEpB,OAAO,cAAC,EAAD,CAEHC,MAAOA,EACPV,IAAKA,EACLS,GAAIA,GAHCA,YEelBgB,EAhCM,WAAO,IAAD,EAEazC,mBAAS,CAAC,gBAFvB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAUvB,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAGQS,EAAWe,KAAI,SAACT,GACb,OAAO,cAAC,EAAD,CAEPA,SAAUA,GADLA,YCpBtB4B,G,MAAUC,SAASC,eAAe,SAExCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.ef5b456f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes  from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState(''); // ''\r\n\r\n    const handleInputChange = (e) => {\r\n        const value = e.target.value;\r\n        setinputValue(value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setinputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=OX8IPPgtfT3tsl77EJsEYsZQcnTnj1Gh`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            //images?: si existe que me la muestre\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    //console.log(gifs);\r\n    return gifs;\r\n    //setImgs\r\n\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({ title, url}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img\r\n                src={url}\r\n                alt={title}\r\n            />\r\n            <p className=\"animate__animated animate__bounce\">{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs'\r\n import GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data, loading } = useFetchGifs( category );\r\n   \r\n    return (\r\n        <div>\r\n            <h3 className=\"animate__animated animate__delay-2s 2s\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando Gifs..</p>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    data.map(({ title, url, id }) => {\r\n\r\n                        return <GifGridItem\r\n                            key={id}\r\n                            title={title}\r\n                            url={url}\r\n                            id={id}\r\n                        />\r\n\r\n                    })\r\n                }\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category ).then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                });\r\n        })\r\n\r\n    }, [ category ]);\r\n\r\n    return state; // objeto\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon ball']);\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //     setCategories(['HunterxHunter',...categories]);\r\n\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            \r\n            <ol>\r\n\r\n                {\r\n                    categories.map((category) => {\r\n                       return <GifGrid \r\n                       key={category}\r\n                       category={category}\r\n                       />\r\n                    })\r\n                }\r\n\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nconst divRoot = document.getElementById('root');\n\nReactDOM.render(<GifExpertApp />, divRoot);\n\n//GifExpertApp\n// h2 GifExpertApp h2\n//hr"],"sourceRoot":""}